{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","React","createElement","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","noteId","find","note","id","NoteListNav","this","context","map","folder","key","to","folderId","filter","length","countNotesForFolder","name","Link","type","icon","Component","contextType","ApiContext","NotePageNav","match","params","findFolder","role","onClick","history","goBack","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","config","method","headers","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","modified","format","NoteListMain","notesForFolder","getNotesForFolder","NotePageMain","handleDeleteNote","push","content","split","para","i","NotefulForm","action","ValiationError","hasError","message","AddFolder","handleSubmit","target","value","body","JSON","stringify","state","folderValid","validMessage","inputValue","errorMsg","trim","setState","onSubmit","htmlFor","AddNote","newNote","Date","App","handleAddFolder","handleAddNote","all","notesRes","foldersRes","path","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","document","getElementById"],"mappings":"yxBAGe,SAASA,EAAgBC,GACeA,EAA7CC,IAA6CD,EAAxCE,UAAwCF,EAA7BG,UADsB,IACRC,EADO,YACQJ,EADR,iCAG7C,OAAOK,IAAMC,cACXN,EAAMC,I,yVADD,EAGHC,UAAW,CAAC,kBAAmBF,EAAME,WAAWK,KAAK,MAClDH,GAELJ,EAAMQ,UAIVT,EAAgBU,aAAc,CAC5BR,IAAK,KCfQI,UAAMK,cAAc,CACjCC,MAAO,GACPC,QAAS,GACTC,UAAW,aACXC,QAAS,aACTC,WAAY,eCHDC,EAAW,eAACL,EAAD,uDAAO,GAAIM,EAAX,8CACtBN,EAAMO,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOH,MCGZI,G,uLAGT,IAAD,EAC0BC,KAAKC,QAD/B,IACCX,eADD,MACS,GADT,MACaD,aADb,MACmB,GADnB,EAEP,OACE,yBAAKT,UAAU,eACb,wBAAIA,UAAU,qBACXU,EAAQY,KAAI,SAAAC,GAAM,OACjB,wBAAIC,IAAKD,EAAOL,IACd,kBAAC,IAAD,CACElB,UAAU,2BACVyB,GAAE,kBAAaF,EAAOL,KAEtB,0BAAMlB,UAAU,0BDTG,eAACS,EAAD,uDAAO,GAAIiB,EAAX,8CACjCjB,EAAMkB,QAAO,SAAAV,GAAI,OAAIA,EAAKS,WAAaA,KAAUE,OCShCC,CAAoBpB,EAAOc,EAAOL,KAEpCK,EAAOO,WAKhB,yBAAK9B,UAAU,+BACb,kBAAC,EAAD,CACED,IAAKgC,IACLN,GAAG,cACHO,KAAK,SACLhC,UAAU,kCAEV,kBAAC,IAAD,CAAiBiC,KAAK,SACtB,6BAPF,gB,GAvB+B9B,IAAM+B,YAA1Bf,EACZgB,YAAcC,E,UCFFC,E,iLAWT,IAAD,SACqBjB,KAAKC,QAAzBZ,EADD,EACCA,MAAOC,EADR,EACQA,QACPK,EAAWK,KAAKtB,MAAMwC,MAAMC,OAA5BxB,OAEFQ,EFrBgB,eAACb,EAAD,uDAAS,GAAIgB,EAAb,8CACxBhB,EAAQM,MAAK,SAAAO,GAAM,OAAIA,EAAOL,KAAOQ,KEoBpBc,CAAW9B,GADbI,EAASL,EAAOM,IAAW,IACAW,UACxC,OACE,yBAAK1B,UAAU,eACb,kBAAC,EAAD,CACED,IAAI,SACJ0C,KAAK,OACLC,QAAS,kBAAM,EAAK5C,MAAM6C,QAAQC,UAClC5C,UAAU,4BAEV,kBAAC,IAAD,CAAiBiC,KAAK,iBACtB,6BAPF,QAUCV,GACC,wBAAIvB,UAAU,4BACXuB,EAAOO,W,GA9BqB3B,IAAM+B,WAA1BG,EACZ9B,aAAe,CACpBoC,QAAS,CACPC,OAAQ,cAEVN,MAAO,CACLC,OAAQ,KANOF,EASZF,YAAcC,E,YChBR,GACbS,aAAc,yBCOKC,G,iNAMnBC,kBAAoB,SAAAC,GAClBA,EAAEC,iBACF,IAAMlC,EAAS,EAAKjB,MAAMoB,GAE1BgC,MAAM,GAAD,OAAIC,EAAON,aAAX,kBAAiC9B,GAAU,CAC9CqC,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAAAC,GACJ,OAAKA,EAAIC,GAEFD,EAAIE,OADFF,EAAIE,OAAOH,MAAK,SAAAN,GAAC,OAAIU,QAAQC,OAAOX,SAG9CM,MAAK,WACJ,EAAKjC,QAAQR,WAAWE,GAExB,EAAKjB,MAAM8D,aAAa7C,MAEzB8C,OAAM,SAAAC,GACLC,QAAQD,MAAM,CAAEA,c,wEAIZ,IAAD,EACwB1C,KAAKtB,MAA5BgC,EADD,EACCA,KAAMZ,EADP,EACOA,GAAI8C,EADX,EACWA,SAClB,OACE,yBAAKhE,UAAU,QACb,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMyB,GAAE,gBAAWP,IAChBY,IAGL,4BACE9B,UAAU,eACVgC,KAAK,SACLU,QAAStB,KAAK2B,mBAEd,kBAAC,IAAD,CAAiBd,KAAK,cACrB,IANH,UASA,yBAAKjC,UAAU,eACb,yBAAKA,UAAU,wBAAf,WAEG,IACD,0BAAMA,UAAU,QACbiE,YAAOD,EAAU,uB,GAtDE7D,IAAM+B,YAAnBY,EACZvC,aAAc,CACnBqD,aAAc,cAFGd,EAIZX,YAAcC,E,UCHF8B,E,iLAQT,IACAxC,EAAaN,KAAKtB,MAAMwC,MAAMC,OAA9Bb,SADD,EAEcN,KAAKC,QAAlBZ,MACF0D,ELbuB,eAAC1D,EAAD,uDAAO,GAAIiB,EAAX,8CAC7BA,EAEEjB,EAAMkB,QAAO,SAAAV,GAAI,OAAIA,EAAKS,WAAaA,KADvCjB,EKWqB2D,MAHhB,MAEO,GAFP,EAGyC1C,GAChD,OACE,6BAAS1B,UAAU,gBACjB,4BACGmE,EAAe7C,KAAI,SAAAL,GAAI,OACtB,wBAAIO,IAAKP,EAAKC,IACZ,kBAAC,EAAD,CACEA,GAAID,EAAKC,GACTY,KAAMb,EAAKa,KACXkC,SAAU/C,EAAK+C,gBAKvB,yBAAKhE,UAAU,kCACb,kBAAC,EAAD,CACED,IAAKgC,IACLN,GAAG,YACHO,KAAK,SACLhC,UAAU,iCAEV,kBAAC,IAAD,CAAiBiC,KAAK,SACtB,6BAPF,c,GA1BgC9B,IAAM+B,WAA3BgC,EACZ3D,aAAe,CACpB+B,MAAO,CACLC,OAAQ,KAHO2B,EAMZ/B,YAAcC,E,UCTFiC,E,2MAQnBC,iBAAmB,SAAAvD,GACjB,EAAKjB,MAAM6C,QAAQ4B,KAAnB,M,wEAGQ,IAAD,EACcnD,KAAKC,QAAlBZ,aADD,MACO,GADP,EAECM,EAAWK,KAAKtB,MAAMwC,MAAMC,OAA5BxB,OACFE,EAAOH,EAASL,EAAOM,IAAW,CAAEyD,QAAS,IACnD,OACE,6BAASxE,UAAU,gBACjB,kBAAC,EAAD,CACEkB,GAAID,EAAKC,GACTY,KAAMb,EAAKa,KACXkC,SAAU/C,EAAK+C,SACfJ,aAAcxC,KAAKkD,mBAErB,yBAAKtE,UAAU,yBACZiB,EAAKuD,QAAQC,MAAM,YAAYnD,KAAI,SAACoD,EAAMC,GAAP,OAClC,uBAAGnD,IAAKmD,GAAID,Y,GA1BkBvE,IAAM+B,WAA3BmC,EACZ9D,aAAe,CACpB+B,MAAO,CACLC,OAAQ,KAHO8B,EAMZlC,YAAcC,E,MCTR,SAASwC,EAAY9E,GAAQ,IAClCE,EAA6BF,EAA7BE,UAAcE,EADmB,YACJJ,EADI,eAEzC,OACE,wCACEE,UAAW,CAAC,eAAgBA,GAAWK,KAAK,KAC5CwE,OAAO,KACH3E,ICPK,SAAS4E,EAAehF,GACnC,OAAIA,EAAMiF,SACC,wBAAI/E,UAAU,SAASF,EAAMkF,SAEjC,qC,UCCUC,E,YACnB,WAAYnF,GAAQ,IAAD,8BACjB,4CAAMA,KAsCRoF,aAAe,SAAAlC,GACbA,EAAEC,iBACF,IAAM1B,EAAS,CACbO,KAAMkB,EAAEmC,OAAO,eAAeC,OAEhClC,MAAM,GAAD,OAAIC,EAAON,aAAX,YAAmC,CACtCO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBgC,KAAMC,KAAKC,UAAUhE,KAEpB+B,MAAK,SAAAC,GACJ,OAAKA,EAAIC,GAEFD,EAAIE,OADFF,EAAIE,OAAOH,MAAK,SAAAN,GAAC,OAAIU,QAAQC,OAAOX,SAG9CM,MAAK,SAAA/B,GACJ,EAAKF,QAAQV,UAAUY,GACvB,EAAKzB,MAAM6C,QAAQ4B,KAAnB,kBAAmChD,EAAOL,QAE3C2C,OAAM,SAAAC,GACLC,QAAQD,MAAM,CAAEA,cA3DpB,EAAK0B,MAAQ,CACXC,aAAa,EACbC,aAAc,IAJC,E,4EAcJC,GACb,IAAIC,EAAWxE,KAAKoE,MAAME,aACtBX,GAAW,EAGW,KAD1BY,EAAaA,EAAWE,QACTjE,QACbgE,EAAW,0BACXb,GAAW,GAEFY,EAAW/D,OAAS,GAC7BgE,EAAW,4CACXb,GAAW,IAGXa,EAAW,GACXb,GAAW,GAGb3D,KAAK0E,SAAS,CACZJ,aAAcE,EACdH,aAAcV,M,+BAgChB,OACE,6BAAS/E,UAAU,aACjB,+CAEA,kBAAC,EAAD,CAAa+F,SAAU3E,KAAK8D,cAC1B,yBAAKlF,UAAU,SACb,2BAAOgG,QAAQ,qBAAf,QAGA,2BAAOhE,KAAK,OAAOd,GAAG,oBAAoBY,KAAK,iBAEjD,kBAAC,EAAD,CAAiBiD,UAAW3D,KAAKoE,MAAMC,YAAaT,QAAS5D,KAAKoE,MAAME,eAExE,yBAAK1F,UAAU,WACb,4BAAQgC,KAAK,UAAb,qB,GAjF2BE,aAAlB+C,EAQZ1E,aAAe,CACpBoC,QAAS,CACP4B,KAAM,eAVSU,EAaZ9C,YAAcC,E,UCdF6D,E,2MASnBf,aAAe,SAAAlC,GACbA,EAAEC,iBACF,IAAMiD,EAAU,CACdpE,KAAMkB,EAAEmC,OAAO,aAAaC,MAC5BZ,QAASxB,EAAEmC,OAAO,gBAAgBC,MAClC1D,SAAUsB,EAAEmC,OAAO,kBAAkBC,MACrCpB,SAAU,IAAImC,MAEhBjD,MAAM,GAAD,OAAIC,EAAON,aAAX,UAAiC,CACpCO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBgC,KAAMC,KAAKC,UAAUW,KAEpB5C,MAAK,SAAAC,GACJ,OAAKA,EAAIC,GAEFD,EAAIE,OADFF,EAAIE,OAAOH,MAAK,SAAAN,GAAC,OAAIU,QAAQC,OAAOX,SAG9CM,MAAK,SAAArC,GACJ,EAAKI,QAAQT,QAAQK,GACrB,EAAKnB,MAAM6C,QAAQ4B,KAAnB,kBAAmCtD,EAAKS,cAEzCmC,OAAM,SAAAC,GACLC,QAAQD,MAAM,CAAEA,c,wEAIZ,IAAD,EACkB1C,KAAKC,QAAtBX,eADD,MACW,GADX,EAEP,OACE,6BAASV,UAAU,WACjB,6CACA,kBAAC,EAAD,CAAa+F,SAAU3E,KAAK8D,cAC1B,yBAAKlF,UAAU,SACb,2BAAOgG,QAAQ,mBAAf,QAGA,2BAAOhE,KAAK,OAAOd,GAAG,kBAAkBY,KAAK,eAE/C,yBAAK9B,UAAU,SACb,2BAAOgG,QAAQ,sBAAf,WAGA,8BAAU9E,GAAG,qBAAqBY,KAAK,kBAEzC,yBAAK9B,UAAU,SACb,2BAAOgG,QAAQ,sBAAf,UAGA,4BAAQ9E,GAAG,qBAAqBY,KAAK,kBACnC,4BAAQsD,MAAO,MAAf,OACC1E,EAAQY,KAAI,SAAAC,GAAM,OACjB,4BAAQC,IAAKD,EAAOL,GAAIkE,MAAO7D,EAAOL,IACnCK,EAAOO,WAKhB,yBAAK9B,UAAU,WACb,4BAAQgC,KAAK,UAAb,mB,GAtEyBE,aAAhB+D,EAEZ1F,aAAe,CACpBoC,QAAS,CACP4B,KAAM,eAJS0B,EAOZ9D,YAAcC,E,UC0IRgE,E,2MAzIbZ,MAAQ,CACN/E,MAAO,GACPC,QAAS,I,EA2BX2F,gBAAkB,SAAA9E,GAChB,EAAKuE,SAAS,CACZpF,QAAQ,GAAD,mBACF,EAAK8E,MAAM9E,SADT,CAELa,O,EAKN+E,cAAgB,SAAArF,GACd,EAAK6E,SAAS,CACZrF,MAAM,GAAD,mBACA,EAAK+E,MAAM/E,OADX,CAEHQ,O,EAKNqD,iBAAmB,SAAAvD,GACjB,EAAK+E,SAAS,CACZrF,MAAO,EAAK+E,MAAM/E,MAAMkB,QAAO,SAAAV,GAAI,OAAIA,EAAKC,KAAOH,Q,mFA5ClC,IAAD,OAClB2C,QAAQ6C,IAAI,CACVrD,MAAM,GAAD,OAAIC,EAAON,aAAX,WACLK,MAAM,GAAD,OAAIC,EAAON,aAAX,eAEJS,MAAK,YAA6B,IAAD,mBAA1BkD,EAA0B,KAAhBC,EAAgB,KAChC,OAAKD,EAAShD,GAETiD,EAAWjD,GAGTE,QAAQ6C,IAAI,CACjBC,EAAS/C,OACTgD,EAAWhD,SAJJgD,EAAWhD,OAAOH,MAAK,SAAAN,GAAC,OAAIU,QAAQC,OAAOX,MAF3CwD,EAAS/C,OAAOH,MAAK,SAAAN,GAAC,OAAIU,QAAQC,OAAOX,SASnDM,MAAK,YAAuB,IAAD,mBAApB7C,EAAoB,KAAbC,EAAa,KAC1B,EAAKoF,SAAS,CAAErF,QAAOC,eAExBmD,OAAM,SAAAC,GACLC,QAAQD,MAAM,CAAEA,e,wCA6BpB,OACE,oCACG,CAAC,IAAK,qBAAqBxC,KAAI,SAAAoF,GAAI,OAClC,kBAAC,IAAD,CACEC,OAAK,EACLnF,IAAKkF,EACLA,KAAMA,EACNE,UAAWzF,OAGf,kBAAC,IAAD,CACEuF,KAAK,gBACLE,UAAWvE,IAEb,kBAAC,IAAD,CACEqE,KAAK,cACLE,UAAWvE,IAEb,kBAAC,IAAD,CACEqE,KAAK,YACLE,UAAWvE,O,yCAOjB,OACE,oCACG,CAAC,IAAK,qBAAqBf,KAAI,SAAAoF,GAAI,OAClC,kBAAC,IAAD,CACEC,OAAK,EACLnF,IAAKkF,EACLA,KAAMA,EACNE,UAAW1C,OAGf,kBAAC,IAAD,CACEwC,KAAK,gBACLE,UAAWvC,IAEb,kBAAC,IAAD,CACEqC,KAAK,cACLE,UAAW3B,IAEb,kBAAC,IAAD,CACEyB,KAAK,YACLE,UAAWX,O,+BAOjB,IAAMb,EAAQ,CACZ3E,MAAOW,KAAKoE,MAAM/E,MAClBC,QAASU,KAAKoE,MAAM9E,QACpBC,UAAWS,KAAKiF,gBAChBzF,QAASQ,KAAKkF,cACdzF,WAAYO,KAAKkD,kBAEnB,OACE,kBAAClC,EAAWyE,SAAZ,CAAqBzB,MAAOA,GAC1B,yBAAKpF,UAAU,OACb,yBAAKA,UAAU,YACZoB,KAAK0F,mBAER,4BAAQ9G,UAAU,eAChB,4BACE,kBAAC,IAAD,CAAMyB,GAAG,KAAT,WACC,IACD,kBAAC,IAAD,CAAiBQ,KAAK,mBAG1B,0BAAMjC,UAAU,aACboB,KAAK2F,0B,GAlIA7E,aCFlB8E,IAAQC,IAAIC,IAAQC,IAAeC,IAAYC,KAE/CC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5292458d.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","export default {\n  API_ENDPOINT: 'http://localhost:9090'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","import React from 'react';\n\nexport default function ValiationError(props) {\n    if (props.hasError) {\n        return <h3 className=\"error\">{props.message}</h3>\n    }\n    return <></>\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ValidationError from './ValidationError';\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddFolder.css'\n\nexport default class AddFolder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      folderValid: false,\n      validMessage: ''\n    }\n  }\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  validateFolder(inputValue) {\n    let errorMsg = this.state.validMessage;\n    let hasError = false;\n\n    inputValue = inputValue.trim();\n    if (inputValue.length === 0) {\n      errorMsg = 'Folder Name is required';\n      hasError = true;\n\n    } else if (inputValue.length < 3) {\n      errorMsg = 'Folder Name must be at least 3 characters';\n      hasError = true;\n\n    } else {\n      errorMsg = '';\n      hasError = false;\n    }\n\n    this.setState({\n      validMessage: errorMsg,\n      folderValid: !hasError\n    })\n\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      name: e.target['folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name' />\n          </div>\n          <ValidationError hasError={!this.state.folderValid} message={this.state.validMessage} />\n\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddNote.css'\n\nexport default class AddNote extends Component {\n\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newNote = {\n      name: e.target['note-name'].value,\n      content: e.target['note-content'].value,\n      folderId: e.target['note-folder-id'].value,\n      modified: new Date(),\n    }\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folderId}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders = [] } = this.context\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='note-name-input' name='note-name' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='note-content-input' name='note-content' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='note-folder-select' name='note-folder-id'>\n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.name}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json(),\n        ])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddFolder = folder => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        folder\n      ]\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        note\n      ]\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    })\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageMain}\n        />\n        <Route\n          path='/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/add-note'\n          component={AddNote}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.handleDeleteNote,\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              <FontAwesomeIcon icon='check-double' />\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}