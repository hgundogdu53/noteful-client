{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","folder_id","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","console","log","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","parseInt","Note_Note_Note","note_name","NotePageMain","handleDeleteNote","push","content","split","para","i","NotefulForm","assign","action","ValiationError","hasError","message","Fragment","AddFolder","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","folder_name","target","value","body","JSON","stringify","state","folderValid","validMessage","inputValue","errorMsg","trim","setState","NotefulForm_NotefulForm","onSubmit","htmlFor","AddNote","newNote","Date","App","handleAddFolder","toConsumableArray","handleAddNote","note_id","_this2","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f8e098d5.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\nimport PropTypes from 'prop-types'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folder_id)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n\nNotePageNav.propTypes = {\n  notes: PropTypes.array,\n  folders: PropTypes.array,\n  noteId: PropTypes.string,\n}","export default {\n  API_ENDPOINT: 'https://mysterious-tundra-28430.herokuapp.com/api' || 'http://localhost:8000/api'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps = {\n    onDeleteNote: () => { },\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    console.log(noteId);\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n\n  render() {\n\n\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes = [] } = this.context\n    const notesForFolder = getNotesForFolder(notes, parseInt(folderId))\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.note_name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","import React from 'react';\n\nexport default function ValiationError(props) {\n    if (props.hasError) {\n        return <h3 className=\"error\">{props.message}</h3>\n    }\n    return <></>\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ValidationError from './ValidationError';\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddFolder.css'\n\nexport default class AddFolder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      folderValid: false,\n      validMessage: ''\n    }\n  }\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  validateFolder(inputValue) {\n    let errorMsg = this.state.validMessage;\n    let hasError = false;\n\n    inputValue = inputValue.trim();\n    if (inputValue.length === 0) {\n      errorMsg = 'Folder Name is required';\n      hasError = true;\n\n    } else if (inputValue.length < 3) {\n      errorMsg = 'Folder Name must be at least 3 characters';\n      hasError = true;\n\n    } else {\n      errorMsg = '';\n      hasError = false;\n    }\n\n    this.setState({\n      validMessage: errorMsg,\n      folderValid: !hasError\n    })\n\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      folder_name: e.target.name.value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name' />\n          </div>\n          <ValidationError hasError={!this.state.folderValid} message={this.state.validMessage} />\n\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddNote.css'\n\nexport default class AddNote extends Component {\n\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newNote = {\n      name: e.target['note-name'].value,\n      content: e.target['note-content'].value,\n      folderId: e.target['note-folder-id'].value,\n      modified: new Date(),\n    }\n    fetch(`${config.API_ENDPOINT}/api/notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folderId}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders = [] } = this.context\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='note-name-input' name='note-name' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='note-content-input' name='note-content' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='note-folder-select' name='note-folder-id'>\n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.name}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  componentDidMount() {\n    console.log('endpoint: ' + config.API_ENDPOINT)\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json(),\n        ])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n        // console.log(this.state)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddFolder = folder => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        folder\n      ]\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        note\n      ]\n    })\n  }\n\n  handleDeleteNote = note_id => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== note_id)\n    })\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folder_id'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        )}\n        <Route\n          path='/note/:note_id'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folder_id'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route\n          path='/note/:note_id'\n          component={NotePageMain}\n        />\n        <Route\n          path='/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/add-note'\n          component={AddNote}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.handleDeleteNote,\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              <FontAwesomeIcon icon='check-double' />\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}